version: '3'

services:
  # app:
  #   container_name: go_bookstore_app                                 # Название контейнера
  #   build: .                                                    # Образ контейнера берем из текущей папки
  #   ports:                                                      # Связываем порты хоста:контейнера
  #     - 8082:8082 
  #   restart: on-failure
  #   volumes:                                                    # Монтируем том с приложением
  #     - api:/usr/src/app/
  #   depends_on:
  #     - mysql
  #   networks:                                                   # Подключаем к сети
  #     - go_bookstore_network

  mysql:
    container_name: "mysql"
    # platform: linux/x86_64 #If are on apple silicon, you need to add this line
    image: mysql
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    # volumes:
    #   - "mysqldb:/var/lib/mysql"
      # - "mysql/config:/etc/mysql/conf.d:ro"
      # - "mysql/log:/var/log/mysql"
    security_opt:
      - seccomp:unconfined
    # networks:                                                   # Подключаем к сети
    #   - go_bookstore_network

  phpmyadmin:
    image: "phpmyadmin"
    container_name: phpmyadmin
    ports:
      - "${phpmyadminPort}:80"
    environment:
      - PMA_HOST=${MYSQL_IP_Address}
      - PMA_PORT=${MYSQL_PORT}
      - MAX_EXECUTION_TIME=30000
      - UPLOAD_LIMIT=2048M
      - MEMORY_LIMIT=2048M
    # networks:                                                   # Подключаем к сети
    #   - go_bookstore_network
  
#   prometheus:
#     container_name: prometheus                                  # Система мониторинга
#     image: prom/prometheus:latest
#     volumes:  
#       - ./etc/prometheus:/etc/prometheus/                       # Монтируем том с данными из БД
#     hostname: prometheus
#     command:
#       - --config.file=/etc/prometheus/prometheus.yml            # Устанавливаем конфигурацию из файла prometheus.yml
#     ports:
#       - 9090:9090                                               # Связываем порты хоста:контейнера 
#     restart: unless-stopped
#     environment:
#       TZ: "Europe/Moscow"
#     networks:
#       - go_blog_network

# # Извлекает данные хоста (cpu, memory) 
#   node-exporter:
#     container_name: exporter
#     image: prom/node-exporter
#     volumes:
#       - /proc:/host/proc:ro
#       - /sys:/host/sys:ro
#       - /:/rootfs:ro
#     hostname: exporter
#     command:
#       - --path.procfs=/host/proc
#       - --path.sysfs=/host/sys
#       - --collector.filesystem.ignored-mount-points
#       - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
#     ports:
#       - 9100:9100
#     restart: unless-stopped
#     environment:
#       TZ: "Europe/Moscow"
#     networks:
#       - go_blog_network

#   # Визуализация данных на дашборде
#   grafana:
#     image: grafana/grafana
#     user: root
#     depends_on:
#       - prometheus
#     ports:
#       - 3000:3000
#     volumes:
#       - ./etc/grafana:/var/lib/grafana
#       - ./etc/grafana/provisioning/:/etc/grafana/provisioning/
#     container_name: grafana
#     hostname: grafana
#     restart: unless-stopped
#     environment:
#       TZ: "Europe/Moscow"
#     networks:
#       - go_blog_network



# Список томов
# volumes:
#   api:
#   db:

# Настройки сети (чтоб контейнеры могли обмениваться данными)
# networks:
#   go_bookstore_network:
#     driver: bridge