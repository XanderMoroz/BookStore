definitions:
  books.AddBookRequestBody:
    properties:
      author:
        type: string
      description:
        type: string
      title:
        type: string
    type: object
  users.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  users.RegisterInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Testing Swagger APIs.
  termsOfService: http://swagger.io/terms/
  title: BookStore APIs
  version: "1.0"
paths:
  /:
    get:
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /books:
    post:
      consumes:
      - application/json
      description: Creating Book in DB with given request body
      parameters:
      - description: Введите данные статьи
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/books.AddBookRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: create new Book
      tags:
      - Books
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticate User in app with given request body
      parameters:
      - description: Введите данные для авторизации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.LoginInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: user authentication
      tags:
      - Authentication
  /users/register:
    post:
      consumes:
      - application/json
      description: Register User in app with given request body
      parameters:
      - description: Введите данные для регистрации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: user registration
      tags:
      - Authentication
securityDefinitions:
  JWT:
    in: header
    name: token//
    type: apiKey
swagger: "2.0"
